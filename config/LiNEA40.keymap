#define ZMK_POINTING_DEFAULT_SCRL_VAL 75

#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 1
#define MARK 2
#define CURSOR 3
#define FUNCTION 4
#define SCROLL 5
#define WIRELESS 6

//mouse cursol

&mmv {
    delay-ms = <20>;
    trigger-period-ms = <5>;
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <2>;
};

//mouse scroll

&msc {
    delay-ms = <3>;
    trigger-period-ms = <3>;
    time-to-max-speed-ms = <150>;
    acceleration-exponent = <2>;
};

/ {
    input_processors {
        zip_wheel_scaler: zip_wheel_scaler {
            compatible = "zmk,input-processor-scaler";
            #input-processor-cells = <2>;
            type = <INPUT_EV_REL>;
            codes = <INPUT_REL_WHEEL>;
            track-remainders;
        };
    };
};

&msc_input_listener {
    speed_up {
        layers = <FUNCTION>;
        input-processors = <&zip_wheel_scaler 1 1>; //スクロールを1倍速にする
    };
};

&trackball_listener {
    scroller {
        layers = <SCROLL>;
        input-processors =
            <&zip_xy_transform INPUT_TRANSFORM_Y_INVERT>,
            //スクロール方向を逆転,,,,,,,,,,,,,,,,
            <&zip_xy_to_scroll_mapper>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        ZenkakuHankaku {
            bindings = <&kp GRAVE>;
            key-positions = <11 12>;
        };

        DeleteKey {
            bindings = <&kp DEL>;
            key-positions = <7 8>;
        };

        InsertKey {
            bindings = <&kp INS>;
            key-positions = <6 7>;
        };

        CenterClick {
            bindings = <&mkp MB3>;
            key-positions = <17 16>;
        };

        RightClick {
            bindings = <&mkp MB2>;
            key-positions = <18 17>;
        };

        PrevClick {
            bindings = <&mkp MB4>;
            key-positions = <27 28>;
        };

        ClickNext {
            bindings = <&mkp MB5>;
            key-positions = <26 27>;
        };
    };

    behaviors {
        re_kp: sensor_rotate_kp {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W    &kp E         &kp R         &kp T                                         &kp Y        &kp U  &lt 6 I    &lt 6 O                &kp P
&kp A           &kp S    &kp D         &kp F         &kp G                                         &kp H        &kp J  &kp K      &kp L                  &kp SEMICOLON
&kp Z           &kp X    &kp C         &kp V         &kp B                                         &kp N        &kp M  &kp COMMA  &kp DOT                &kp SLASH
&kp LEFT_SHIFT  &kp TAB  &kp LEFT_ALT  &kp LEFT_WIN  &kp LEFT_CONTROL  &lt 2 SPACE    &lt 2 ENTER  &lt 3 MINUS         &lt 6 ESC  &kp LC(K_APPLICATION)  &mt RIGHT_SHIFT SLASH
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        //1

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans          &trans  &trans  &trans
            >;
        };

        //2

        MARK {
            bindings = <
&kp EXCLAMATION    &kp AT        &kp HASH      &kp DOLLAR    &kp PERCENT                      &kp CARET         &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NUMBER_1       &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5                           &kp NUMBER_6      &kp N7             &kp NUMBER_8  &kp NUMBER_9          &kp NUMBER_0
&kp LS(SEMICOLON)  &kp EQUAL     &kp GRAVE     &kp APOS      &kp BACKSLASH                    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans        &trans                &trans
&trans             &trans        &trans        &trans        &trans         &trans    &trans  &trans                               &trans        &trans                &trans
            >;

            sensor-bindings = <&re_kp C_VOLUME_DOWN C_VOLUME_UP>;
        };

        //3

        CURSOR {
            bindings = <
&kp F11  &kp F12  &kp INT_MUHENKAN  &kp INT_HENKAN  &kp ESC                     &kp LA(LEFT)  &kp LA(RIGHT)  &kp LG(SPACE)  &kp DELETE   &kp BACKSPACE
&kp F1   &kp F2   &kp F3            &kp F4          &kp F5                      &kp LEFT      &kp DOWN       &kp UP_ARROW   &kp RIGHT    &kp RIGHT_CONTROL
&kp F6   &kp F7   &kp F8            &kp F9          &kp F10                     &kp HOME      &kp END        &kp PAGE_DOWN  &kp PAGE_UP  &kp RIGHT_ALT
&trans   &trans   &trans            &trans          &trans   &trans    &kp ESC  &trans                       &trans         &trans       &kp ESC
            >;
        };

        //4

        FUNCTION {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5                     &trans      &trans  &kp LA(PRINTSCREEN)  &trans  &kp LC(LA(DELETE))
&kp F6  &kp F7  &kp F8  &kp F9   &kp F10                    &trans      &trans  &kp LS(LG(S))        &trans  &kp LC(LS(ESCAPE))
&trans  &trans  &trans  &kp F11  &kp F12                    &kp C_MUTE  &trans  &trans               &trans  &kp LC(LA(INS))
&trans  &trans  &trans  &trans   &trans   &trans    &trans  &trans              &trans               &trans  &trans
            >;

            sensor-bindings = <&mouse_scrl SCRL_DOWN SCRL_UP>;
        };

        //5

        SCROLL {
            bindings = <
&trans    &kp LC(LG(LEFT_ARROW))  &kp UP_ARROW  &kp LC(LG(RIGHT_ARROW))  &trans                    &kp KP_MULTIPLY  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp KP_PLUS
&trans    &kp LEFT_ARROW          &kp DOWN      &kp RIGHT_ARROW          &trans                    &kp KP_SLASH     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_MINUS
&kp HOME  &kp PAGE_DOWN           &kp END       &kp PAGE_UP              &trans                    &kp UNDER        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER
&trans    &trans                  &trans        &trans                   &trans  &trans    &trans  &kp NUMBER_0                   &kp NUMBER_0  &kp DOT       &kp QUESTION
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN_ARROW>;
        };

        //6

        WIRELESS {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                         &trans          &trans  &trans    &trans  &mkp MB2
&trans        &trans        &trans        &trans        &trans                               &trans          &trans  &mkp MB1  &trans  &trans
&trans        &trans        &trans        &trans        &trans                               &trans          &trans  &mo 5     &trans  &bt BT_CLR
&trans        &trans        &trans        &trans        &trans        &trans    &bootloader  &studio_unlock          &trans    &trans  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>;
        };
    };
};
